/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd.Administrativo;

import BackEnd.ConexionBD;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;

import BackEnd.ConexionBD;
import BackEnd.Sedes;
import com.itextpdf.text.Document;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javax.swing.table.DefaultTableModel;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author luisg
 */
public class ListarClientes extends javax.swing.JPanel {

    /**
     * Creates new form ListarClientes
     */
    public ListarClientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        listarClientesTotales = new javax.swing.JLabel();
        listarPorSedeClientes = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTbl_clientes = new javax.swing.JTable();
        jcbSedes = new javax.swing.JComboBox<>();
        bCargarSedes = new javax.swing.JButton();
        btn_pdf_cln = new javax.swing.JButton();

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.white, null, null));

        listarClientesTotales.setBackground(new java.awt.Color(0, 153, 102));
        listarClientesTotales.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        listarClientesTotales.setForeground(new java.awt.Color(255, 255, 255));
        listarClientesTotales.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listarClientesTotales.setText("Clientes totales");
        listarClientesTotales.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listarClientesTotales.setOpaque(true);
        listarClientesTotales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarClientesTotalesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listarClientesTotalesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                listarClientesTotalesMouseExited(evt);
            }
        });

        listarPorSedeClientes.setBackground(new java.awt.Color(0, 153, 102));
        listarPorSedeClientes.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        listarPorSedeClientes.setForeground(new java.awt.Color(255, 255, 255));
        listarPorSedeClientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        listarPorSedeClientes.setText("Clientes por sede");
        listarPorSedeClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listarPorSedeClientes.setEnabled(false);
        listarPorSedeClientes.setOpaque(true);
        listarPorSedeClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listarPorSedeClientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listarPorSedeClientesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                listarPorSedeClientesMouseExited(evt);
            }
        });

        jTbl_clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Direccion", "Id comuna", "Sede"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTbl_clientes);

        bCargarSedes.setText("Cargar sedes");
        bCargarSedes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCargarSedesMouseClicked(evt);
            }
        });

        btn_pdf_cln.setBackground(new java.awt.Color(255, 255, 255));
        btn_pdf_cln.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_pdf_cln.setForeground(new java.awt.Color(0, 153, 102));
        btn_pdf_cln.setText("Generar  reporte PDF");
        btn_pdf_cln.setToolTipText("");
        btn_pdf_cln.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_pdf_clnMouseClicked(evt);
            }
        });
        btn_pdf_cln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pdf_clnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(listarClientesTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(listarPorSedeClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jcbSedes, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCargarSedes)))
                .addGap(89, 89, 89))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(btn_pdf_cln)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listarClientesTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(listarPorSedeClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbSedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bCargarSedes))))
                .addGap(42, 42, 42)
                .addComponent(btn_pdf_cln)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 769, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listarClientesTotalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarClientesTotalesMouseClicked
        // TODO add your handling code here:
        //Usuarios listaUsuarios = new Usuarios();
        jTbl_clientes.setModel(new DefaultTableModel());
        DefaultTableModel modelo;
        ConexionBD con = new ConexionBD();
        String sql = "";
        java.sql.Connection conexion = con.getConexion();
        java.sql.Statement stmt = con.getStm();

        try {
            conexion = DriverManager.getConnection(con.getUrl(), con.getUser(), con.getPassword());
        } catch (SQLException ex) {
            Logger.getLogger(ListarUsuariosTabulados.class.getName()).log(Level.SEVERE, null, ex);
        }

        String[] nmClm = {"Cedula", "Nombre", "Direccion", "Id Comuna", "Sede"};

        sql = "SELECT * FROM clientes";

        modelo = (DefaultTableModel) jTbl_clientes.getModel();

        modelo.setColumnIdentifiers(nmClm);

        jTbl_clientes.setModel(modelo);

        String[] registro = new String[5];

        try {
            stmt = conexion.createStatement();

            ResultSet rstm = stmt.executeQuery(sql);

            while (rstm.next()) {
                registro[0] = rstm.getString(1);
                registro[1] = rstm.getString(2);
                registro[2] = rstm.getString(3);
                registro[3] = rstm.getString(4);
                registro[4] = rstm.getString(5);

                modelo.addRow(registro);
            }
            jTbl_clientes.setVisible(true);

            conexion.close();

        } catch (SQLException ex) {
            Logger.getLogger(ListarUsuariosTabulados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listarClientesTotalesMouseClicked

    private void listarClientesTotalesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarClientesTotalesMouseEntered
        // TODO add your handling code here:
        listarClientesTotales.setForeground(Color.red);
    }//GEN-LAST:event_listarClientesTotalesMouseEntered

    private void listarClientesTotalesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarClientesTotalesMouseExited
        // TODO add your handling code here:
        listarClientesTotales.setForeground(Color.WHITE);
    }//GEN-LAST:event_listarClientesTotalesMouseExited

    private void listarPorSedeClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarPorSedeClientesMouseClicked
       
       /* jTbl_clientes.setModel(new DefaultTableModel());

        DefaultTableModel modelo;
        ConexionBD con = new ConexionBD();
        String sql = "";
        java.sql.Connection conexion = con.getConexion();
        java.sql.Statement stmt = con.getStm();
        //String nombreSede = Jtxt_nmSede.getText();
        String nombreSede = jcbSedes.getItemAt(jcbSedes.getSelectedIndex());

        String[] nmClm = {"id", "nombre", "telefono", "contraseña", "cargo", "sede", "estado"};

        try {
            conexion = DriverManager.getConnection(con.getUrl(), con.getUser(), con.getPassword());
        } catch (SQLException ex) {
            Logger.getLogger(ListarUsuariosTabulados.class.getName()).log(Level.SEVERE, null, ex);
        }

        sql = "select * from clientes, sedes where sede_asignada like\'" + nombreSede + "\'";

        modelo = (DefaultTableModel) jTbl_clientes.getModel();

        modelo.setColumnIdentifiers(nmClm);

        jTbl_clientes.setModel(modelo);

        String[] registro = new String[7];

        try {
            stmt = conexion.createStatement();

            ResultSet rstm = stmt.executeQuery(sql);

            while (rstm.next()) {
                registro[0] = rstm.getString(1);
                registro[1] = rstm.getString(2);
                registro[2] = rstm.getString(3);
                registro[3] = rstm.getString(4);
                registro[4] = rstm.getString(5);
                registro[5] = rstm.getString(6);
                registro[6] = rstm.getString(7);
                modelo.addRow(registro);
            }
            jTbl_clientes.setVisible(true);

            conexion.close();

        } catch (SQLException ex) {
            Logger.getLogger(ListarUsuariosTabulados.class.getName()).log(Level.SEVERE, null, ex);
        }
*/
        
    }//GEN-LAST:event_listarPorSedeClientesMouseClicked

    private void listarPorSedeClientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarPorSedeClientesMouseEntered
        // TODO add your handling code here:
        //listarPorSede.setForeground(Color.red);
    }//GEN-LAST:event_listarPorSedeClientesMouseEntered

    private void listarPorSedeClientesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listarPorSedeClientesMouseExited
        // TODO add your handling code here:
        //listarPorSede.setForeground(Color.white);
    }//GEN-LAST:event_listarPorSedeClientesMouseExited

    private void bCargarSedesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCargarSedesMouseClicked
        Sedes sede = new Sedes();
        String listaDeNombres[] = sede.getNombreSedes().split(":");

        jcbSedes.removeAllItems();
        for (int i = 0; i < listaDeNombres.length; i++) {
            jcbSedes.addItem(listaDeNombres[i]);
        }
        listarPorSedeClientes.setEnabled(true);
        listarPorSedeClientes.setBackground(new Color(0, 153, 102));

        //(0, 153, 102)
    }//GEN-LAST:event_bCargarSedesMouseClicked

    private void btn_pdf_clnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_pdf_clnMouseClicked
        Document documento = new Document();

        String rutaCompleta = "";

        try {
            String ruta = System.getProperty("user.home");
            //JOptionPane.showMessageDialog(null, "Ruta: " + ruta);
            try {
                PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/Reporte_Prueba.pdf"));
                rutaCompleta = ruta + "/Desktop/Reporte_Prueba.pdf";
            } catch (DocumentException | FileNotFoundException ex1) {
                try {
                    PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Escritorio/Reporte_Prueba.pdf"));
                    rutaCompleta = ruta + "/Escritorio/Reporte_Prueba.pdf";
                } catch (DocumentException | FileNotFoundException ex2) {
                    try {
                        PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Escritorio/Reporte_Prueba.pdf"));
                        rutaCompleta = ruta + "/Escritorio/Reporte_Prueba.pdf";
                    } catch (DocumentException | FileNotFoundException ex3) {
                    }
                }
            }

            //PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Reporte_Prueba.pdf"));
            documento.open();

            PdfPTable tabla = new PdfPTable(4);
            tabla.addCell("Cedula");
            tabla.addCell("Nombre");
            tabla.addCell("Dirección");
            tabla.addCell("Comuna");
            tabla.addCell("Id Sede");

            try {
                ConexionBD con = new ConexionBD();
                java.sql.Connection conexion = con.getConexion();
                java.sql.Statement stmt = con.getStm();
                conexion = DriverManager.getConnection(con.getUrl(), con.getUser(), con.getPassword());

                stmt = conexion.createStatement();

                String sql = "SELECT * FROM sedes";

                ResultSet rstm = stmt.executeQuery(sql);

                while (rstm.next()) {
                    tabla.addCell(rstm.getString("id"));
                    tabla.addCell(rstm.getString("nombre"));
                    tabla.addCell(rstm.getString("direccion"));
                    tabla.addCell(rstm.getString("telefono"));
                }
                Paragraph titulo = new Paragraph("Tabla sedes\n", FontFactory.getFont("arial", 22, Font.BOLD, BaseColor.BLACK));

                String texto = "Señores: Cliente\n"
                        + "Les presentamos la lista de las sedes\n\n";
                Paragraph parrafo = new Paragraph(texto, FontFactory.getFont("arial", 12, Font.BOLD, BaseColor.BLACK));

                documento.add(titulo);

                documento.add(parrafo);

                documento.add(tabla);

                conexion.close();

            } catch (DocumentException | SQLException e) {
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "PDF Creado. Se guardó en " + rutaCompleta);
        } catch (HeadlessException ex) {
        }
    }//GEN-LAST:event_btn_pdf_clnMouseClicked

    private void btn_pdf_clnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pdf_clnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_pdf_clnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bCargarSedes;
    private javax.swing.JButton btn_pdf_cln;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTbl_clientes;
    public javax.swing.JComboBox<String> jcbSedes;
    javax.swing.JLabel listarClientesTotales;
    javax.swing.JLabel listarPorSedeClientes;
    // End of variables declaration//GEN-END:variables
}
